const TelegramApi = require("node-telegram-bot-api");
const {
    menu,
    catalog,
    boxesCatalog,
    cardsCatalog,
    papersCatalog,
} = require("./options");

const TOKEN = "6361131921:AAGXI19nDaNZNu5lwEcPp4NCR1yyjhdKUfg";

const bot = new TelegramApi(TOKEN, { polling: true });

const start = () => {
    bot.setMyCommands([
        {
            command: "/start",
            description: "–ù–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ",
        },
        // {
        //     command: "/catalog",
        //     description: "–ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ –∏ —É—Å–ª—É–≥",
        // },
    ]);

    bot.on("message", async (msg) => {
        const text = msg.text;
        const chatId = msg.chat.id;

        if (text === "/start") {
            if (msg.from.last_name) {
                await bot.sendSticker(chatId, "./assets/gift.tgs");
                return bot.sendMessage(
                    chatId,
                    `üëã 
                    ${msg.from.first_name} ${msg.from.last_name}, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω üéÅ "–ë—É–º–∞–∂–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏!`,
                    menu
                );
            } else {
                await bot.sendSticker(chatId, "./assets/gift.tgs");
                return bot.sendMessage(
                    chatId,
                    `üëã ${msg.from.first_name}, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω üéÅ "–ë—É–º–∞–∂–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏!`,
                    menu
                );
            }
        }

        // if (text === "/catalog") {
        //     return bot.sendMessage(
        //         chatId,
        //         "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ç–æ–≤–∞—Ä üõí",
        //         catalog
        //     );
        // }

        return bot.sendMessage(
            chatId,
            "–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª, —Å–¥–µ–ª–∞–π—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å –µ—â–µ —Ä–∞–∑!"
        );
    });

    bot.on("callback_query", async (msg) => {
        const data = msg.data;
        const chatId = msg.message.chat.id;

        switch (data) {
            case "address":
                await bot.sendMessage(
                    chatId,
                    "üè† –£–ª. –ü—Ä–∏—Ç—ã—Ü–∫–æ–≥–æ, 156, –¢–¶ ¬´–ì—Ä–∏–Ω –°–∏—Ç–∏¬ª, –ú–∏–Ω—Å–∫, –ë–µ–ª–∞—Ä—É—Å—å, https://yandex.by/maps/-/CHdRr~a"
                );
                break;
            case "open":
                await bot.sendMessage(chatId, "üïô –ï–∂–µ–¥–Ω–µ–≤–Ω–æ —Å 10.00 –¥–æ 22.00");
                break;
            case "phoneNumber":
                await bot.sendMessage(chatId, "üì± +375-29-675-23-15");
                break;
            case "catalog":
                await bot.sendMessage(
                    chatId,
                    "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ç–æ–≤–∞—Ä üõí",
                    catalog
                );
                break;
            case "boxes":
                await bot.sendMessage(
                    chatId,
                    "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –∫–æ—Ä–æ–±–∫–∏ üì¶",
                    boxesCatalog
                );
                break;
            case "cards":
                await bot.sendMessage(
                    chatId,
                    "–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–∫—Ä—ã—Ç–∫—É üîñ",
                    cardsCatalog
                );
                break;
            case "papers":
                await bot.sendMessage(
                    chatId,
                    "–í—ã–±–µ—Ä–∏—Ç–µ –±—É–º–∞–≥—É üìÉ",
                    papersCatalog
                );
                break;
        }
    });
};

start();
